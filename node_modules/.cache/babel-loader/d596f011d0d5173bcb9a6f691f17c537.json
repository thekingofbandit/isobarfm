{"ast":null,"code":"import _defineProperty from \"/Users/i848465/personal/heroes/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { SET_COMICS, SET_COMIC_LIST_LOADING } from '../actions/comics';\nconst initialState = {\n  list: [],\n  isLoading: false\n};\nexport default ((state = initialState, action) => {\n  switch (action.type) {\n    case SET_COMICS:\n      return _objectSpread({}, state, {\n        list: action.value\n      });\n\n    case SET_COMIC_LIST_LOADING:\n      return _objectSpread({}, state, {\n        isLoading: action.value\n      });\n\n    default:\n      return state;\n  }\n});","map":{"version":3,"sources":["/Users/i848465/personal/heroes/src/reducers/comics.js"],"names":["SET_COMICS","SET_COMIC_LIST_LOADING","initialState","list","isLoading","state","action","type","value"],"mappings":";;;;;;AAAA,SAASA,UAAT,EAAqBC,sBAArB,QAAmD,mBAAnD;AAEA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,IAAI,EAAE,EADa;AAEnBC,EAAAA,SAAS,EAAE;AAFQ,CAArB;AAKA,gBAAe,CAACC,KAAK,GAAGH,YAAT,EAAuBI,MAAvB,KAAkC;AAC/C,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKP,UAAL;AACE,+BACKK,KADL;AAEEF,QAAAA,IAAI,EAAEG,MAAM,CAACE;AAFf;;AAIF,SAAKP,sBAAL;AACE,+BACKI,KADL;AAEED,QAAAA,SAAS,EAAEE,MAAM,CAACE;AAFpB;;AAIF;AACE,aAAOH,KAAP;AAZJ;AAcD,CAfD","sourcesContent":["import { SET_COMICS, SET_COMIC_LIST_LOADING } from '../actions/comics';\n\nconst initialState = {\n  list: [],\n  isLoading: false,\n};\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    case SET_COMICS:\n      return {\n        ...state,\n        list: action.value,\n      };\n    case SET_COMIC_LIST_LOADING:\n      return {\n        ...state,\n        isLoading: action.value,\n      };\n    default:\n      return state;\n  }\n};\n"]},"metadata":{},"sourceType":"module"}