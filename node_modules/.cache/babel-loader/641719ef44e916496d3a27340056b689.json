{"ast":null,"code":"import * as albumsAPI from \"../services/bands\";\nexport const fetchAlbumsForBand = () => {\n  return (dispatch, getState) => {\n    dispatch(setLoadingAlbums(true));\n    const state = getState();\n    const bandID = state.selectedBand.band.id;\n    let albums = state.albums.list;\n    let albumsByBand = state.albums.byBand[bandID];\n\n    if (!albums) {\n      albumsAPI.list().then(response => {\n        albums = response.data;\n        dispatch(setAlbums(albums));\n      }).catch(err => {\n        dispatch(setAlbumsError(err));\n      });\n    }\n  };\n};\nexport const SET_ALBUMS = \"SET_ALBUMS\";\nexport const setAlbums = albums => {\n  return {\n    type: SET_ALBUMS,\n    value: albums\n  };\n};\nexport const SET_ALBUMS_BY_BAND = \"SET_ALBUMS_BY_BAND\";\nexport const setAlbumsByBand = albums => {\n  return {\n    type: SET_ALBUMS_BY_BAND,\n    value: albums\n  };\n};\nexport const SET_LOADING_ALBUMS = \"SET_LOADING_ALBUMS\";\nexport const setLoadingAlbums = isLoading => {\n  return {\n    type: SET_LOADING_ALBUMS,\n    value: isLoading\n  };\n};\nexport const SET_ALBUMS_ERROR = \"SET_ALBUMS_ERROR\";\nexport const setAlbumsError = error => {\n  return {\n    type: SET_ALBUMS_ERROR,\n    error\n  };\n};","map":{"version":3,"sources":["/Users/i848465/personal/isobarfm/src/actions/albums.js"],"names":["albumsAPI","fetchAlbumsForBand","dispatch","getState","setLoadingAlbums","state","bandID","selectedBand","band","id","albums","list","albumsByBand","byBand","then","response","data","setAlbums","catch","err","setAlbumsError","SET_ALBUMS","type","value","SET_ALBUMS_BY_BAND","setAlbumsByBand","SET_LOADING_ALBUMS","isLoading","SET_ALBUMS_ERROR","error"],"mappings":"AAAA,OAAO,KAAKA,SAAZ,MAA2B,mBAA3B;AAEA,OAAO,MAAMC,kBAAkB,GAAG,MAAM;AACtC,SAAO,CAACC,QAAD,EAAWC,QAAX,KAAwB;AAC7BD,IAAAA,QAAQ,CAACE,gBAAgB,CAAC,IAAD,CAAjB,CAAR;AAEA,UAAMC,KAAK,GAAGF,QAAQ,EAAtB;AACA,UAAMG,MAAM,GAAGD,KAAK,CAACE,YAAN,CAAmBC,IAAnB,CAAwBC,EAAvC;AAEA,QAAIC,MAAM,GAAGL,KAAK,CAACK,MAAN,CAAaC,IAA1B;AACA,QAAIC,YAAY,GAAGP,KAAK,CAACK,MAAN,CAAaG,MAAb,CAAoBP,MAApB,CAAnB;;AAEA,QAAI,CAACI,MAAL,EAAa;AACXV,MAAAA,SAAS,CACNW,IADH,GAEGG,IAFH,CAEQC,QAAQ,IAAI;AAChBL,QAAAA,MAAM,GAAGK,QAAQ,CAACC,IAAlB;AACAd,QAAAA,QAAQ,CAACe,SAAS,CAACP,MAAD,CAAV,CAAR;AACD,OALH,EAMGQ,KANH,CAMSC,GAAG,IAAI;AACZjB,QAAAA,QAAQ,CAACkB,cAAc,CAACD,GAAD,CAAf,CAAR;AACD,OARH;AASD;AACF,GApBD;AAqBD,CAtBM;AAwBP,OAAO,MAAME,UAAU,GAAG,YAAnB;AACP,OAAO,MAAMJ,SAAS,GAAGP,MAAM,IAAI;AACjC,SAAO;AAAEY,IAAAA,IAAI,EAAED,UAAR;AAAoBE,IAAAA,KAAK,EAAEb;AAA3B,GAAP;AACD,CAFM;AAIP,OAAO,MAAMc,kBAAkB,GAAG,oBAA3B;AACP,OAAO,MAAMC,eAAe,GAAGf,MAAM,IAAI;AACvC,SAAO;AAAEY,IAAAA,IAAI,EAAEE,kBAAR;AAA4BD,IAAAA,KAAK,EAAEb;AAAnC,GAAP;AACD,CAFM;AAIP,OAAO,MAAMgB,kBAAkB,GAAG,oBAA3B;AACP,OAAO,MAAMtB,gBAAgB,GAAGuB,SAAS,IAAI;AAC3C,SAAO;AAAEL,IAAAA,IAAI,EAAEI,kBAAR;AAA4BH,IAAAA,KAAK,EAAEI;AAAnC,GAAP;AACD,CAFM;AAIP,OAAO,MAAMC,gBAAgB,GAAG,kBAAzB;AACP,OAAO,MAAMR,cAAc,GAAGS,KAAK,IAAI;AACrC,SAAO;AAAEP,IAAAA,IAAI,EAAEM,gBAAR;AAA0BC,IAAAA;AAA1B,GAAP;AACD,CAFM","sourcesContent":["import * as albumsAPI from \"../services/bands\";\n\nexport const fetchAlbumsForBand = () => {\n  return (dispatch, getState) => {\n    dispatch(setLoadingAlbums(true));\n\n    const state = getState();\n    const bandID = state.selectedBand.band.id;\n\n    let albums = state.albums.list;\n    let albumsByBand = state.albums.byBand[bandID];\n\n    if (!albums) {\n      albumsAPI\n        .list()\n        .then(response => {\n          albums = response.data;\n          dispatch(setAlbums(albums));\n        })\n        .catch(err => {\n          dispatch(setAlbumsError(err));\n        });\n    }\n  };\n};\n\nexport const SET_ALBUMS = \"SET_ALBUMS\";\nexport const setAlbums = albums => {\n  return { type: SET_ALBUMS, value: albums };\n};\n\nexport const SET_ALBUMS_BY_BAND = \"SET_ALBUMS_BY_BAND\";\nexport const setAlbumsByBand = albums => {\n  return { type: SET_ALBUMS_BY_BAND, value: albums };\n};\n\nexport const SET_LOADING_ALBUMS = \"SET_LOADING_ALBUMS\";\nexport const setLoadingAlbums = isLoading => {\n  return { type: SET_LOADING_ALBUMS, value: isLoading };\n};\n\nexport const SET_ALBUMS_ERROR = \"SET_ALBUMS_ERROR\";\nexport const setAlbumsError = error => {\n  return { type: SET_ALBUMS_ERROR, error };\n};\n"]},"metadata":{},"sourceType":"module"}