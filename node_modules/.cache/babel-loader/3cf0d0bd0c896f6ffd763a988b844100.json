{"ast":null,"code":"import _defineProperty from \"/Users/i848465/personal/isobarfm/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { SET_ALBUMS, SET_LOADING_ALBUMS, SET_ALBUMS_ERROR } from \"../actions/albums\";\nconst initialState = {\n  list: [],\n  byBand: {},\n  isLoading: false,\n  error: null\n};\n\nconst setAlbumsByBand = (albumList, bandID, byBand) => {\n  console.log(\"indexing albums\", albumList, bandID);\n  const albumsByBand = albumList.reduce((indexedAlbums, cur) => {\n    for (const albumID of albumList) {\n      if (albumID === cur.id) {\n        console.log(\"albumID was the same\");\n\n        if (!indexedAlbums[bandID]) {\n          indexedAlbums[bandID] = [];\n        }\n\n        indexedAlbums[bandID].concat(cur);\n      }\n    }\n\n    return indexedAlbums;\n  }, {});\n  console.log(\"abb\", albumsByBand);\n  const newByBand = Object.assign(byBand[bandID], albumsByBand);\n  console.log(\"nbb\", newByBand);\n  return newByBand;\n};\n\nexport default ((state = initialState, action) => {\n  switch (action.type) {\n    case SET_ALBUMS:\n      console.log(\"set albums\", action.value);\n      const byBand = setAlbumsByBand(action.value.albums, action.value.id, state.byBand);\n      return _objectSpread({}, state, {\n        list: action.value.albums,\n        byBand,\n        error: null\n      });\n\n    case SET_LOADING_ALBUMS:\n      return _objectSpread({}, state, {\n        isLoading: action.value\n      });\n\n    case SET_ALBUMS_ERROR:\n      return _objectSpread({}, state, {\n        list: [],\n        byBand: {},\n        error: action.error,\n        isLoading: false\n      });\n\n    default:\n      return state;\n  }\n});","map":{"version":3,"sources":["/Users/i848465/personal/isobarfm/src/reducers/albums.js"],"names":["SET_ALBUMS","SET_LOADING_ALBUMS","SET_ALBUMS_ERROR","initialState","list","byBand","isLoading","error","setAlbumsByBand","albumList","bandID","console","log","albumsByBand","reduce","indexedAlbums","cur","albumID","id","concat","newByBand","Object","assign","state","action","type","value","albums"],"mappings":";;;;;;AAAA,SACEA,UADF,EAEEC,kBAFF,EAGEC,gBAHF,QAIO,mBAJP;AAMA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,IAAI,EAAE,EADa;AAEnBC,EAAAA,MAAM,EAAE,EAFW;AAGnBC,EAAAA,SAAS,EAAE,KAHQ;AAInBC,EAAAA,KAAK,EAAE;AAJY,CAArB;;AAOA,MAAMC,eAAe,GAAG,CAACC,SAAD,EAAYC,MAAZ,EAAoBL,MAApB,KAA+B;AACrDM,EAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ,EAA+BH,SAA/B,EAA0CC,MAA1C;AAEA,QAAMG,YAAY,GAAGJ,SAAS,CAACK,MAAV,CAAiB,CAACC,aAAD,EAAgBC,GAAhB,KAAwB;AAC5D,SAAK,MAAMC,OAAX,IAAsBR,SAAtB,EAAiC;AAC/B,UAAIQ,OAAO,KAAKD,GAAG,CAACE,EAApB,EAAwB;AACtBP,QAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ;;AACA,YAAI,CAACG,aAAa,CAACL,MAAD,CAAlB,EAA4B;AAC1BK,UAAAA,aAAa,CAACL,MAAD,CAAb,GAAwB,EAAxB;AACD;;AAEDK,QAAAA,aAAa,CAACL,MAAD,CAAb,CAAsBS,MAAtB,CAA6BH,GAA7B;AACD;AACF;;AAED,WAAOD,aAAP;AACD,GAboB,EAalB,EAbkB,CAArB;AAeAJ,EAAAA,OAAO,CAACC,GAAR,CAAY,KAAZ,EAAmBC,YAAnB;AAEA,QAAMO,SAAS,GAAGC,MAAM,CAACC,MAAP,CAAcjB,MAAM,CAACK,MAAD,CAApB,EAA8BG,YAA9B,CAAlB;AACAF,EAAAA,OAAO,CAACC,GAAR,CAAY,KAAZ,EAAmBQ,SAAnB;AAEA,SAAOA,SAAP;AACD,CAxBD;;AA0BA,gBAAe,CAACG,KAAK,GAAGpB,YAAT,EAAuBqB,MAAvB,KAAkC;AAC/C,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKzB,UAAL;AACEW,MAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EAA0BY,MAAM,CAACE,KAAjC;AACA,YAAMrB,MAAM,GAAGG,eAAe,CAC5BgB,MAAM,CAACE,KAAP,CAAaC,MADe,EAE5BH,MAAM,CAACE,KAAP,CAAaR,EAFe,EAG5BK,KAAK,CAAClB,MAHsB,CAA9B;AAMA,+BACKkB,KADL;AAEEnB,QAAAA,IAAI,EAAEoB,MAAM,CAACE,KAAP,CAAaC,MAFrB;AAGEtB,QAAAA,MAHF;AAIEE,QAAAA,KAAK,EAAE;AAJT;;AAMF,SAAKN,kBAAL;AACE,+BACKsB,KADL;AAEEjB,QAAAA,SAAS,EAAEkB,MAAM,CAACE;AAFpB;;AAIF,SAAKxB,gBAAL;AACE,+BACKqB,KADL;AAEEnB,QAAAA,IAAI,EAAE,EAFR;AAGEC,QAAAA,MAAM,EAAE,EAHV;AAIEE,QAAAA,KAAK,EAAEiB,MAAM,CAACjB,KAJhB;AAKED,QAAAA,SAAS,EAAE;AALb;;AAOF;AACE,aAAOiB,KAAP;AA7BJ;AA+BD,CAhCD","sourcesContent":["import {\n  SET_ALBUMS,\n  SET_LOADING_ALBUMS,\n  SET_ALBUMS_ERROR\n} from \"../actions/albums\";\n\nconst initialState = {\n  list: [],\n  byBand: {},\n  isLoading: false,\n  error: null\n};\n\nconst setAlbumsByBand = (albumList, bandID, byBand) => {\n  console.log(\"indexing albums\", albumList, bandID);\n\n  const albumsByBand = albumList.reduce((indexedAlbums, cur) => {\n    for (const albumID of albumList) {\n      if (albumID === cur.id) {\n        console.log(\"albumID was the same\");\n        if (!indexedAlbums[bandID]) {\n          indexedAlbums[bandID] = [];\n        }\n\n        indexedAlbums[bandID].concat(cur);\n      }\n    }\n\n    return indexedAlbums;\n  }, {});\n\n  console.log(\"abb\", albumsByBand);\n\n  const newByBand = Object.assign(byBand[bandID], albumsByBand);\n  console.log(\"nbb\", newByBand);\n\n  return newByBand;\n};\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    case SET_ALBUMS:\n      console.log(\"set albums\", action.value);\n      const byBand = setAlbumsByBand(\n        action.value.albums,\n        action.value.id,\n        state.byBand\n      );\n\n      return {\n        ...state,\n        list: action.value.albums,\n        byBand,\n        error: null\n      };\n    case SET_LOADING_ALBUMS:\n      return {\n        ...state,\n        isLoading: action.value\n      };\n    case SET_ALBUMS_ERROR:\n      return {\n        ...state,\n        list: [],\n        byBand: {},\n        error: action.error,\n        isLoading: false\n      };\n    default:\n      return state;\n  }\n};\n"]},"metadata":{},"sourceType":"module"}