{"ast":null,"code":"import * as albumsAPI from \"../services/bands\";\nexport const fetchAlbumsForBand = () => {\n  return (dispatch, getState) => {\n    dispatch(setLoadingAlbums(true));\n    const state = getState();\n    const bandID = state.selectedBand.band.id;\n    let albumsByBand = state.albums.byBand[bandID];\n\n    if (albumsByBand) {}\n  };\n};\nexport const SET_ALBUMS = \"SET_ALBUMS\";\nexport const setAlbums = albums => {\n  return {\n    type: SET_ALBUMS,\n    value: albums\n  };\n};\nexport const SET_ALBUMS_BY_BAND = \"SET_ALBUMS_BY_BAND\";\nexport const setAlbumsByBand = albums => {\n  return {\n    type: SET_ALBUMS_BY_BAND,\n    value: albums\n  };\n};\nexport const SET_LOADING_ALBUMS = \"SET_LOADING_ALBUMS\";\nexport const setLoadingAlbums = isLoading => {\n  return {\n    type: SET_LOADING_ALBUMS,\n    value: isLoading\n  };\n}; // export const SET_LOADING_ALBUMS_FOR_BAND = \"SET_LOADING_ALBUMS_FOR_BAND\";\n// export const setLoadingAlbumsForBand = isLoading => {\n//   return { type: SET_LOADING_ALBUMS_FOR_BAND, value: isLoading };\n// };\n\nexport const SET_ALBUMS_ERROR = \"SET_ALBUMS_ERROR\";\nexport const setAlbumsError = error => {\n  return {\n    type: SET_ALBUMS_ERROR,\n    error\n  };\n};","map":{"version":3,"sources":["/Users/i848465/personal/isobarfm/src/actions/albums.js"],"names":["albumsAPI","fetchAlbumsForBand","dispatch","getState","setLoadingAlbums","state","bandID","selectedBand","band","id","albumsByBand","albums","byBand","SET_ALBUMS","setAlbums","type","value","SET_ALBUMS_BY_BAND","setAlbumsByBand","SET_LOADING_ALBUMS","isLoading","SET_ALBUMS_ERROR","setAlbumsError","error"],"mappings":"AAAA,OAAO,KAAKA,SAAZ,MAA2B,mBAA3B;AAEA,OAAO,MAAMC,kBAAkB,GAAG,MAAM;AACtC,SAAO,CAACC,QAAD,EAAWC,QAAX,KAAwB;AAC7BD,IAAAA,QAAQ,CAACE,gBAAgB,CAAC,IAAD,CAAjB,CAAR;AAEA,UAAMC,KAAK,GAAGF,QAAQ,EAAtB;AACA,UAAMG,MAAM,GAAGD,KAAK,CAACE,YAAN,CAAmBC,IAAnB,CAAwBC,EAAvC;AAEA,QAAIC,YAAY,GAAGL,KAAK,CAACM,MAAN,CAAaC,MAAb,CAAoBN,MAApB,CAAnB;;AACA,QAAII,YAAJ,EAAkB,CACjB;AACF,GATD;AAUD,CAXM;AAYP,OAAO,MAAMG,UAAU,GAAG,YAAnB;AACP,OAAO,MAAMC,SAAS,GAAGH,MAAM,IAAI;AACjC,SAAO;AAAEI,IAAAA,IAAI,EAAEF,UAAR;AAAoBG,IAAAA,KAAK,EAAEL;AAA3B,GAAP;AACD,CAFM;AAIP,OAAO,MAAMM,kBAAkB,GAAG,oBAA3B;AACP,OAAO,MAAMC,eAAe,GAAGP,MAAM,IAAI;AACvC,SAAO;AAAEI,IAAAA,IAAI,EAAEE,kBAAR;AAA4BD,IAAAA,KAAK,EAAEL;AAAnC,GAAP;AACD,CAFM;AAIP,OAAO,MAAMQ,kBAAkB,GAAG,oBAA3B;AACP,OAAO,MAAMf,gBAAgB,GAAGgB,SAAS,IAAI;AAC3C,SAAO;AAAEL,IAAAA,IAAI,EAAEI,kBAAR;AAA4BH,IAAAA,KAAK,EAAEI;AAAnC,GAAP;AACD,CAFM,C,CAIP;AACA;AACA;AACA;;AAEA,OAAO,MAAMC,gBAAgB,GAAG,kBAAzB;AACP,OAAO,MAAMC,cAAc,GAAGC,KAAK,IAAI;AACrC,SAAO;AAAER,IAAAA,IAAI,EAAEM,gBAAR;AAA0BE,IAAAA;AAA1B,GAAP;AACD,CAFM","sourcesContent":["import * as albumsAPI from \"../services/bands\";\n\nexport const fetchAlbumsForBand = () => {\n  return (dispatch, getState) => {\n    dispatch(setLoadingAlbums(true));\n\n    const state = getState();\n    const bandID = state.selectedBand.band.id;\n\n    let albumsByBand = state.albums.byBand[bandID];\n    if (albumsByBand) {\n    }\n  };\n};\nexport const SET_ALBUMS = \"SET_ALBUMS\";\nexport const setAlbums = albums => {\n  return { type: SET_ALBUMS, value: albums };\n};\n\nexport const SET_ALBUMS_BY_BAND = \"SET_ALBUMS_BY_BAND\";\nexport const setAlbumsByBand = albums => {\n  return { type: SET_ALBUMS_BY_BAND, value: albums };\n};\n\nexport const SET_LOADING_ALBUMS = \"SET_LOADING_ALBUMS\";\nexport const setLoadingAlbums = isLoading => {\n  return { type: SET_LOADING_ALBUMS, value: isLoading };\n};\n\n// export const SET_LOADING_ALBUMS_FOR_BAND = \"SET_LOADING_ALBUMS_FOR_BAND\";\n// export const setLoadingAlbumsForBand = isLoading => {\n//   return { type: SET_LOADING_ALBUMS_FOR_BAND, value: isLoading };\n// };\n\nexport const SET_ALBUMS_ERROR = \"SET_ALBUMS_ERROR\";\nexport const setAlbumsError = error => {\n  return { type: SET_ALBUMS_ERROR, error };\n};\n"]},"metadata":{},"sourceType":"module"}