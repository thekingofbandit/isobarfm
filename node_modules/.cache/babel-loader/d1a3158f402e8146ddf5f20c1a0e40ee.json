{"ast":null,"code":"import _defineProperty from \"/Users/i848465/personal/isobarfm/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { SET_ALBUMS, SET_LOADING_ALBUMS, SET_ALBUMS_ERROR } from \"../actions/albums\";\nconst initialState = {\n  list: [],\n  byBand: {},\n  isLoading: false,\n  error: null\n};\n\nconst setAlbumsByBand = (albumList, bandID) => {\n  console.log(\"indexing albums\", albumList, state);\n  const _state$band = state.band,\n        id = _state$band.id,\n        albums = _state$band.albums;\n  const albumsByBand = albumList.reduce((indexedAlbums, cur) => {\n    console.log(\"current\", cur);\n\n    for (const albumID of albums) {\n      if (albumID === cur.id) {\n        if (!indexedAlbums[id]) {\n          indexedAlbums[id] = [];\n        }\n\n        indexedAlbums[id].concat(cur);\n      }\n    }\n\n    return indexedAlbums;\n  }, {});\n  Object.assign(state.byBand[id], albumsByBand);\n};\n\nexport default ((state = initialState, action) => {\n  switch (action.type) {\n    case SET_ALBUMS:\n      console.log(\"set albums\", action.value);\n      const byBand = setAlbumsByBand(action.value.albums, action.value.id);\n      return _objectSpread({}, state, {\n        list: action.value.albums,\n        byBand,\n        error: null\n      });\n\n    case SET_LOADING_ALBUMS:\n      return _objectSpread({}, state, {\n        isLoading: action.value\n      });\n\n    case SET_ALBUMS_ERROR:\n      return _objectSpread({}, state, {\n        list: [],\n        byBand: {},\n        error: action.error,\n        isLoading: false\n      });\n\n    default:\n      return state;\n  }\n});","map":{"version":3,"sources":["/Users/i848465/personal/isobarfm/src/reducers/albums.js"],"names":["SET_ALBUMS","SET_LOADING_ALBUMS","SET_ALBUMS_ERROR","initialState","list","byBand","isLoading","error","setAlbumsByBand","albumList","bandID","console","log","state","band","id","albums","albumsByBand","reduce","indexedAlbums","cur","albumID","concat","Object","assign","action","type","value"],"mappings":";;;;;;AAAA,SACEA,UADF,EAEEC,kBAFF,EAGEC,gBAHF,QAIO,mBAJP;AAMA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,IAAI,EAAE,EADa;AAEnBC,EAAAA,MAAM,EAAE,EAFW;AAGnBC,EAAAA,SAAS,EAAE,KAHQ;AAInBC,EAAAA,KAAK,EAAE;AAJY,CAArB;;AAOA,MAAMC,eAAe,GAAG,CAACC,SAAD,EAAYC,MAAZ,KAAuB;AAC7CC,EAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ,EAA+BH,SAA/B,EAA0CI,KAA1C;AAD6C,sBAEtBA,KAAK,CAACC,IAFgB;AAAA,QAErCC,EAFqC,eAErCA,EAFqC;AAAA,QAEjCC,MAFiC,eAEjCA,MAFiC;AAI7C,QAAMC,YAAY,GAAGR,SAAS,CAACS,MAAV,CAAiB,CAACC,aAAD,EAAgBC,GAAhB,KAAwB;AAC5DT,IAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBQ,GAAvB;;AACA,SAAK,MAAMC,OAAX,IAAsBL,MAAtB,EAA8B;AAC5B,UAAIK,OAAO,KAAKD,GAAG,CAACL,EAApB,EAAwB;AACtB,YAAI,CAACI,aAAa,CAACJ,EAAD,CAAlB,EAAwB;AACtBI,UAAAA,aAAa,CAACJ,EAAD,CAAb,GAAoB,EAApB;AACD;;AAEDI,QAAAA,aAAa,CAACJ,EAAD,CAAb,CAAkBO,MAAlB,CAAyBF,GAAzB;AACD;AACF;;AAED,WAAOD,aAAP;AACD,GAboB,EAalB,EAbkB,CAArB;AAeAI,EAAAA,MAAM,CAACC,MAAP,CAAcX,KAAK,CAACR,MAAN,CAAaU,EAAb,CAAd,EAAgCE,YAAhC;AACD,CApBD;;AAsBA,gBAAe,CAACJ,KAAK,GAAGV,YAAT,EAAuBsB,MAAvB,KAAkC;AAC/C,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK1B,UAAL;AACEW,MAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EAA0Ba,MAAM,CAACE,KAAjC;AACA,YAAMtB,MAAM,GAAGG,eAAe,CAACiB,MAAM,CAACE,KAAP,CAAaX,MAAd,EAAsBS,MAAM,CAACE,KAAP,CAAaZ,EAAnC,CAA9B;AAEA,+BACKF,KADL;AAEET,QAAAA,IAAI,EAAEqB,MAAM,CAACE,KAAP,CAAaX,MAFrB;AAGEX,QAAAA,MAHF;AAIEE,QAAAA,KAAK,EAAE;AAJT;;AAMF,SAAKN,kBAAL;AACE,+BACKY,KADL;AAEEP,QAAAA,SAAS,EAAEmB,MAAM,CAACE;AAFpB;;AAIF,SAAKzB,gBAAL;AACE,+BACKW,KADL;AAEET,QAAAA,IAAI,EAAE,EAFR;AAGEC,QAAAA,MAAM,EAAE,EAHV;AAIEE,QAAAA,KAAK,EAAEkB,MAAM,CAAClB,KAJhB;AAKED,QAAAA,SAAS,EAAE;AALb;;AAOF;AACE,aAAOO,KAAP;AAzBJ;AA2BD,CA5BD","sourcesContent":["import {\n  SET_ALBUMS,\n  SET_LOADING_ALBUMS,\n  SET_ALBUMS_ERROR\n} from \"../actions/albums\";\n\nconst initialState = {\n  list: [],\n  byBand: {},\n  isLoading: false,\n  error: null\n};\n\nconst setAlbumsByBand = (albumList, bandID) => {\n  console.log(\"indexing albums\", albumList, state);\n  const { id, albums } = state.band;\n\n  const albumsByBand = albumList.reduce((indexedAlbums, cur) => {\n    console.log(\"current\", cur);\n    for (const albumID of albums) {\n      if (albumID === cur.id) {\n        if (!indexedAlbums[id]) {\n          indexedAlbums[id] = [];\n        }\n\n        indexedAlbums[id].concat(cur);\n      }\n    }\n\n    return indexedAlbums;\n  }, {});\n\n  Object.assign(state.byBand[id], albumsByBand);\n};\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    case SET_ALBUMS:\n      console.log(\"set albums\", action.value);\n      const byBand = setAlbumsByBand(action.value.albums, action.value.id);\n\n      return {\n        ...state,\n        list: action.value.albums,\n        byBand,\n        error: null\n      };\n    case SET_LOADING_ALBUMS:\n      return {\n        ...state,\n        isLoading: action.value\n      };\n    case SET_ALBUMS_ERROR:\n      return {\n        ...state,\n        list: [],\n        byBand: {},\n        error: action.error,\n        isLoading: false\n      };\n    default:\n      return state;\n  }\n};\n"]},"metadata":{},"sourceType":"module"}