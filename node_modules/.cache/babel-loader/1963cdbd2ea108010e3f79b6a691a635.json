{"ast":null,"code":"var _jsxFileName = \"/Users/i848465/personal/heroes/src/routes/index.js\";\nimport React, { Fragment } from 'react';\nimport { Route, Redirect, Switch } from 'react-router';\nimport Home from '../components/Home';\nimport Loader from '../components/Loader';\nimport Template from '../components/Template/index';\nimport { MEMES, EVENTS } from '../constants/routes';\nimport { connect } from 'react-redux';\n\nconst Routes = isLoading => React.createElement(Fragment, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 11\n  },\n  __self: this\n}, console.log('loading in routes', isLoading), isLoading && React.createElement(Loader, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 13\n  },\n  __self: this\n}), React.createElement(Template, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 14\n  },\n  __self: this\n}, React.createElement(Switch, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 15\n  },\n  __self: this\n}, React.createElement(Route, {\n  exact: true,\n  path: \"/\",\n  component: Home,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 16\n  },\n  __self: this\n}), React.createElement(Route, {\n  exact: true,\n  path: MEMES,\n  component: () => React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, \"memes\"),\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 17\n  },\n  __self: this\n}), React.createElement(Route, {\n  exact: true,\n  path: EVENTS,\n  component: () => React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, \"eventos\"),\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 18\n  },\n  __self: this\n}))));\n\nconst mapStateToProps = state => ({\n  isLoading: state.loader.isLoading\n});\n\nexport default connect(mapStateToProps)(Routes);","map":{"version":3,"sources":["/Users/i848465/personal/heroes/src/routes/index.js"],"names":["React","Fragment","Route","Redirect","Switch","Home","Loader","Template","MEMES","EVENTS","connect","Routes","isLoading","console","log","mapStateToProps","state","loader"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,KAAT,EAAgBC,QAAhB,EAA0BC,MAA1B,QAAwC,cAAxC;AACA,OAAOC,IAAP,MAAiB,oBAAjB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,QAAP,MAAqB,8BAArB;AAEA,SAASC,KAAT,EAAgBC,MAAhB,QAA8B,qBAA9B;AACA,SAASC,OAAT,QAAwB,aAAxB;;AAEA,MAAMC,MAAM,GAAGC,SAAS,IACtB,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACGC,OAAO,CAACC,GAAR,CAAY,mBAAZ,EAAiCF,SAAjC,CADH,EAEGA,SAAS,IAAI,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAFhB,EAGE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE,oBAAC,KAAD;AAAO,EAAA,KAAK,MAAZ;AAAa,EAAA,IAAI,EAAC,GAAlB;AAAsB,EAAA,SAAS,EAAEP,IAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADF,EAEE,oBAAC,KAAD;AAAO,EAAA,KAAK,MAAZ;AAAa,EAAA,IAAI,EAAEG,KAAnB;AAA0B,EAAA,SAAS,EAAE,MAAM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAFF,EAGE,oBAAC,KAAD;AAAO,EAAA,KAAK,MAAZ;AAAa,EAAA,IAAI,EAAEC,MAAnB;AAA2B,EAAA,SAAS,EAAE,MAAM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAHF,CADF,CAHF,CADF;;AAcA,MAAMM,eAAe,GAAGC,KAAK,KAAK;AAAEJ,EAAAA,SAAS,EAAEI,KAAK,CAACC,MAAN,CAAaL;AAA1B,CAAL,CAA7B;;AAEA,eAAeF,OAAO,CAACK,eAAD,CAAP,CAAyBJ,MAAzB,CAAf","sourcesContent":["import React, { Fragment } from 'react';\nimport { Route, Redirect, Switch } from 'react-router';\nimport Home from '../components/Home';\nimport Loader from '../components/Loader';\nimport Template from '../components/Template/index';\n\nimport { MEMES, EVENTS } from '../constants/routes';\nimport { connect } from 'react-redux';\n\nconst Routes = isLoading => (\n  <Fragment>\n    {console.log('loading in routes', isLoading)}\n    {isLoading && <Loader />}\n    <Template>\n      <Switch>\n        <Route exact path=\"/\" component={Home} />\n        <Route exact path={MEMES} component={() => <div>memes</div>} />\n        <Route exact path={EVENTS} component={() => <div>eventos</div>} />\n      </Switch>\n    </Template>\n  </Fragment>\n);\n\nconst mapStateToProps = state => ({ isLoading: state.loader.isLoading });\n\nexport default connect(mapStateToProps)(Routes);\n"]},"metadata":{},"sourceType":"module"}