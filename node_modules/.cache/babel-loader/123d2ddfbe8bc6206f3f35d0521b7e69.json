{"ast":null,"code":"import * as bandsAPI from \"../services/bands\";\nexport const fetchBandByID = id => {\n  return (dispatch, getState, ...args) => {\n    console.log(args);\n    const state = getState();\n\n    if (state.bands.list) {\n      const band = state.bands.list.find(band => band.id === id);\n      dispatch(setSelectedBand(band));\n    }\n\n    dispatch(setLoadingSelectedBand(true));\n    bandsAPI.bandByID(id).then(response => {\n      const band = response.data;\n      dispatch(setSelectedBand(band));\n      dispatch(setLoadingSelectedBand(false));\n    }).catch(err => {\n      dispatch(setSelectedBandError(err));\n    });\n  };\n};\nexport const SET_SELECTED_BAND = \"SET_SELECTED_BAND\";\nexport const setSelectedBand = selectedBand => {\n  return {\n    type: SET_SELECTED_BAND,\n    value: selectedBand\n  };\n};\nexport const SET_LOADING_SELECTED_BAND = \"SET_LOADING_SELECTED_BAND\";\nexport const setLoadingSelectedBand = isLoading => {\n  return {\n    type: SET_LOADING_SELECTED_BAND,\n    value: isLoading\n  };\n};\nexport const SET_SELECTED_BAND_ERROR = \"SET_SELECTED_BAND_ERROR\";\nexport const setSelectedBandError = error => {\n  return {\n    type: SET_SELECTED_BAND_ERROR,\n    error\n  };\n};","map":{"version":3,"sources":["/Users/i848465/personal/isobarfm/src/actions/selectedBand.js"],"names":["bandsAPI","fetchBandByID","id","dispatch","getState","args","console","log","state","bands","list","band","find","setSelectedBand","setLoadingSelectedBand","bandByID","then","response","data","catch","err","setSelectedBandError","SET_SELECTED_BAND","selectedBand","type","value","SET_LOADING_SELECTED_BAND","isLoading","SET_SELECTED_BAND_ERROR","error"],"mappings":"AAAA,OAAO,KAAKA,QAAZ,MAA0B,mBAA1B;AAEA,OAAO,MAAMC,aAAa,GAAGC,EAAE,IAAI;AACjC,SAAO,CAACC,QAAD,EAAWC,QAAX,EAAqB,GAAGC,IAAxB,KAAiC;AACtCC,IAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACA,UAAMG,KAAK,GAAGJ,QAAQ,EAAtB;;AACA,QAAII,KAAK,CAACC,KAAN,CAAYC,IAAhB,EAAsB;AACpB,YAAMC,IAAI,GAAGH,KAAK,CAACC,KAAN,CAAYC,IAAZ,CAAiBE,IAAjB,CAAsBD,IAAI,IAAIA,IAAI,CAACT,EAAL,KAAYA,EAA1C,CAAb;AACAC,MAAAA,QAAQ,CAACU,eAAe,CAACF,IAAD,CAAhB,CAAR;AACD;;AAEDR,IAAAA,QAAQ,CAACW,sBAAsB,CAAC,IAAD,CAAvB,CAAR;AAEAd,IAAAA,QAAQ,CACLe,QADH,CACYb,EADZ,EAEGc,IAFH,CAEQC,QAAQ,IAAI;AAChB,YAAMN,IAAI,GAAGM,QAAQ,CAACC,IAAtB;AACAf,MAAAA,QAAQ,CAACU,eAAe,CAACF,IAAD,CAAhB,CAAR;AAEAR,MAAAA,QAAQ,CAACW,sBAAsB,CAAC,KAAD,CAAvB,CAAR;AACD,KAPH,EAQGK,KARH,CAQSC,GAAG,IAAI;AACZjB,MAAAA,QAAQ,CAACkB,oBAAoB,CAACD,GAAD,CAArB,CAAR;AACD,KAVH;AAWD,GArBD;AAsBD,CAvBM;AAyBP,OAAO,MAAME,iBAAiB,GAAG,mBAA1B;AACP,OAAO,MAAMT,eAAe,GAAGU,YAAY,IAAI;AAC7C,SAAO;AAAEC,IAAAA,IAAI,EAAEF,iBAAR;AAA2BG,IAAAA,KAAK,EAAEF;AAAlC,GAAP;AACD,CAFM;AAIP,OAAO,MAAMG,yBAAyB,GAAG,2BAAlC;AACP,OAAO,MAAMZ,sBAAsB,GAAGa,SAAS,IAAI;AACjD,SAAO;AAAEH,IAAAA,IAAI,EAAEE,yBAAR;AAAmCD,IAAAA,KAAK,EAAEE;AAA1C,GAAP;AACD,CAFM;AAIP,OAAO,MAAMC,uBAAuB,GAAG,yBAAhC;AACP,OAAO,MAAMP,oBAAoB,GAAGQ,KAAK,IAAI;AAC3C,SAAO;AAAEL,IAAAA,IAAI,EAAEI,uBAAR;AAAiCC,IAAAA;AAAjC,GAAP;AACD,CAFM","sourcesContent":["import * as bandsAPI from \"../services/bands\";\n\nexport const fetchBandByID = id => {\n  return (dispatch, getState, ...args) => {\n    console.log(args);\n    const state = getState();\n    if (state.bands.list) {\n      const band = state.bands.list.find(band => band.id === id);\n      dispatch(setSelectedBand(band));\n    }\n\n    dispatch(setLoadingSelectedBand(true));\n\n    bandsAPI\n      .bandByID(id)\n      .then(response => {\n        const band = response.data;\n        dispatch(setSelectedBand(band));\n\n        dispatch(setLoadingSelectedBand(false));\n      })\n      .catch(err => {\n        dispatch(setSelectedBandError(err));\n      });\n  };\n};\n\nexport const SET_SELECTED_BAND = \"SET_SELECTED_BAND\";\nexport const setSelectedBand = selectedBand => {\n  return { type: SET_SELECTED_BAND, value: selectedBand };\n};\n\nexport const SET_LOADING_SELECTED_BAND = \"SET_LOADING_SELECTED_BAND\";\nexport const setLoadingSelectedBand = isLoading => {\n  return { type: SET_LOADING_SELECTED_BAND, value: isLoading };\n};\n\nexport const SET_SELECTED_BAND_ERROR = \"SET_SELECTED_BAND_ERROR\";\nexport const setSelectedBandError = error => {\n  return { type: SET_SELECTED_BAND_ERROR, error };\n};\n"]},"metadata":{},"sourceType":"module"}