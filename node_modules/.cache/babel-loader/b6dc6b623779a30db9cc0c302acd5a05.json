{"ast":null,"code":"var _jsxFileName = \"/Users/i848465/personal/isobarfm/src/components/BandPage/index.js\";\nimport React, { Fragment, useEffect } from \"react\";\nimport Loader from \"../Loader\";\nimport { useSelector } from \"react-redux\";\nimport useActions from \"../../hooks/useActions\";\nimport * as bandSelectors from \"../../selectors/selectedBand\";\nimport * as bandActions from \"../../actions/selectedBand\";\n\nconst BandPage = () => {\n  const selectedBand = useSelector(bandSelectors.getSelectedBand);\n  const isLoading = useSelector(bandSelectors.isSelectedBandLoading);\n  const fetchBandByID = useActions(bandActions.fetchBandByID);\n  useEffect(() => {\n    fetchBandByID();\n  }, [fetchBandByID]);\n  return React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, isLoading && React.createElement(Loader, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }), React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, \"Band\"), selectedBand.name));\n};\n\nexport default BandPage;","map":{"version":3,"sources":["/Users/i848465/personal/isobarfm/src/components/BandPage/index.js"],"names":["React","Fragment","useEffect","Loader","useSelector","useActions","bandSelectors","bandActions","BandPage","selectedBand","getSelectedBand","isLoading","isSelectedBandLoading","fetchBandByID","name"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AAEA,OAAOC,MAAP,MAAmB,WAAnB;AAEA,SAASC,WAAT,QAA4B,aAA5B;AACA,OAAOC,UAAP,MAAuB,wBAAvB;AAEA,OAAO,KAAKC,aAAZ,MAA+B,8BAA/B;AACA,OAAO,KAAKC,WAAZ,MAA6B,4BAA7B;;AAEA,MAAMC,QAAQ,GAAG,MAAM;AACrB,QAAMC,YAAY,GAAGL,WAAW,CAACE,aAAa,CAACI,eAAf,CAAhC;AACA,QAAMC,SAAS,GAAGP,WAAW,CAACE,aAAa,CAACM,qBAAf,CAA7B;AAEA,QAAMC,aAAa,GAAGR,UAAU,CAACE,WAAW,CAACM,aAAb,CAAhC;AAEAX,EAAAA,SAAS,CAAC,MAAM;AACdW,IAAAA,aAAa;AACd,GAFQ,EAEN,CAACA,aAAD,CAFM,CAAT;AAIA,SACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGF,SAAS,IAAI,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADhB,EAEE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAEGF,YAAY,CAACK,IAFhB,CAFF,CADF;AASD,CAnBD;;AAqBA,eAAeN,QAAf","sourcesContent":["import React, { Fragment, useEffect } from \"react\";\n\nimport Loader from \"../Loader\";\n\nimport { useSelector } from \"react-redux\";\nimport useActions from \"../../hooks/useActions\";\n\nimport * as bandSelectors from \"../../selectors/selectedBand\";\nimport * as bandActions from \"../../actions/selectedBand\";\n\nconst BandPage = () => {\n  const selectedBand = useSelector(bandSelectors.getSelectedBand);\n  const isLoading = useSelector(bandSelectors.isSelectedBandLoading);\n\n  const fetchBandByID = useActions(bandActions.fetchBandByID);\n\n  useEffect(() => {\n    fetchBandByID();\n  }, [fetchBandByID]);\n\n  return (\n    <Fragment>\n      {isLoading && <Loader />}\n      <Fragment>\n        <h1>Band</h1>\n        {selectedBand.name}\n      </Fragment>\n    </Fragment>\n  );\n};\n\nexport default BandPage;\n"]},"metadata":{},"sourceType":"module"}