{"ast":null,"code":"import _defineProperty from \"/Users/i848465/personal/heroes/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { SET_HEROES, SET_HERO_LIST_LOADING } from '../actions/heroes';\nconst initialState = {\n  list: []\n};\nexport default ((state = initialState, action) => {\n  switch (action.type) {\n    case SET_HEROES:\n      return _objectSpread({}, state, {\n        list: action.value\n      });\n\n    case SET_HERO_LIST_LOADING:\n      return _objectSpread({}, state, {\n        isComicListLoading: action.value,\n        isLoading: action.value || state.isHeroListLoading\n      });\n\n    default:\n      return state;\n  }\n});","map":{"version":3,"sources":["/Users/i848465/personal/heroes/src/reducers/heroes.js"],"names":["SET_HEROES","SET_HERO_LIST_LOADING","initialState","list","state","action","type","value","isComicListLoading","isLoading","isHeroListLoading"],"mappings":";;;;;;AAAA,SAASA,UAAT,EAAqBC,qBAArB,QAAkD,mBAAlD;AAEA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,IAAI,EAAE;AADa,CAArB;AAIA,gBAAe,CAACC,KAAK,GAAGF,YAAT,EAAuBG,MAAvB,KAAkC;AAC/C,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKN,UAAL;AACE,+BACKI,KADL;AAEED,QAAAA,IAAI,EAAEE,MAAM,CAACE;AAFf;;AAIF,SAAKN,qBAAL;AACE,+BACKG,KADL;AAEEI,QAAAA,kBAAkB,EAAEH,MAAM,CAACE,KAF7B;AAGEE,QAAAA,SAAS,EAAEJ,MAAM,CAACE,KAAP,IAAgBH,KAAK,CAACM;AAHnC;;AAKF;AACE,aAAON,KAAP;AAbJ;AAeD,CAhBD","sourcesContent":["import { SET_HEROES, SET_HERO_LIST_LOADING } from '../actions/heroes';\n\nconst initialState = {\n  list: [],\n};\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    case SET_HEROES:\n      return {\n        ...state,\n        list: action.value,\n      };\n    case SET_HERO_LIST_LOADING:\n      return {\n        ...state,\n        isComicListLoading: action.value,\n        isLoading: action.value || state.isHeroListLoading,\n      };\n    default:\n      return state;\n  }\n};\n"]},"metadata":{},"sourceType":"module"}