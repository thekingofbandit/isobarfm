{"ast":null,"code":"var _jsxFileName = \"/Users/i848465/personal/heroes/src/components/HeroList/index.js\";\nimport React, { Fragment } from 'react';\nimport Hero from '../Hero';\nimport { setHeroListLoading } from '../../actions/loader';\nimport { connect } from 'react-redux';\n\nconst HeroList = ({\n  heroes\n}) => {\n  const listHeroes = () => heroes.map(value => React.createElement(Hero, Object.assign({\n    key: value.id\n  }, value, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9\n    },\n    __self: this\n  })));\n\n  return React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  }, \"Heroes\"), \" \", listHeroes());\n};\n\nconst mapStateToProps = state => {\n  console.log(state);\n  return {\n    heroes: state.heroes.heroes\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    showLoader: () => dispatch(setHeroListLoading(true)),\n    hideLoader: () => dispatch(setHeroListLoading(false))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(HeroList);","map":{"version":3,"sources":["/Users/i848465/personal/heroes/src/components/HeroList/index.js"],"names":["React","Fragment","Hero","setHeroListLoading","connect","HeroList","heroes","listHeroes","map","value","id","mapStateToProps","state","console","log","mapDispatchToProps","dispatch","showLoader","hideLoader"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AAEA,OAAOC,IAAP,MAAiB,SAAjB;AACA,SAASC,kBAAT,QAAmC,sBAAnC;AACA,SAASC,OAAT,QAAwB,aAAxB;;AAEA,MAAMC,QAAQ,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAgB;AAC/B,QAAMC,UAAU,GAAG,MACjBD,MAAM,CAACE,GAAP,CAAWC,KAAK,IAAI,oBAAC,IAAD;AAAM,IAAA,GAAG,EAAEA,KAAK,CAACC;AAAjB,KAAyBD,KAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAApB,CADF;;AAGA,SACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,OACmBF,UAAU,EAD7B,CADF;AAKD,CATD;;AAWA,MAAMI,eAAe,GAAGC,KAAK,IAAI;AAC/BC,EAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACA,SAAO;AAAEN,IAAAA,MAAM,EAAEM,KAAK,CAACN,MAAN,CAAaA;AAAvB,GAAP;AACD,CAHD;;AAKA,MAAMS,kBAAkB,GAAGC,QAAQ,IAAI;AACrC,SAAO;AACLC,IAAAA,UAAU,EAAE,MAAMD,QAAQ,CAACb,kBAAkB,CAAC,IAAD,CAAnB,CADrB;AAELe,IAAAA,UAAU,EAAE,MAAMF,QAAQ,CAACb,kBAAkB,CAAC,KAAD,CAAnB;AAFrB,GAAP;AAID,CALD;;AAOA,eAAeC,OAAO,CACpBO,eADoB,EAEpBI,kBAFoB,CAAP,CAGbV,QAHa,CAAf","sourcesContent":["import React, { Fragment } from 'react';\n\nimport Hero from '../Hero';\nimport { setHeroListLoading } from '../../actions/loader';\nimport { connect } from 'react-redux';\n\nconst HeroList = ({ heroes }) => {\n  const listHeroes = () =>\n    heroes.map(value => <Hero key={value.id} {...value} />);\n\n  return (\n    <Fragment>\n      <h1>Heroes</h1> {listHeroes()}\n    </Fragment>\n  );\n};\n\nconst mapStateToProps = state => {\n  console.log(state);\n  return { heroes: state.heroes.heroes };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    showLoader: () => dispatch(setHeroListLoading(true)),\n    hideLoader: () => dispatch(setHeroListLoading(false)),\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(HeroList);\n"]},"metadata":{},"sourceType":"module"}