{"ast":null,"code":"import * as bandsAPI from \"../services/bands\";\nimport * as albumActions from \"./albums\";\nexport const fetchBandByID = () => {\n  return (dispatch, getState) => {\n    dispatch(setLoadingSelectedBand(true));\n    const state = getState(); // this is horrible please try to fix it later\n\n    const id = window.location.pathname.split(\"/\")[2]; // ugh\n\n    if (state.bands.list) {\n      const band = state.bands.list.find(band => band.id === id);\n\n      if (band) {\n        dispatch(setSelectedBand(band));\n        dispatch(setLoadingSelectedBand(false));\n      }\n    }\n\n    bandsAPI.bandByID(id).then(response => {\n      const band = response.data;\n      dispatch(setSelectedBand(band));\n      console.log(\"setting selected band\", band);\n      const state = getState();\n      console.log(state); // ughhhh\n\n      dispatch(albumActions.fetchAlbumsForBand);\n      dispatch(setLoadingSelectedBand(false));\n    }).catch(err => {\n      dispatch(setSelectedBandError(err));\n    });\n  };\n};\nexport const SET_SELECTED_BAND = \"SET_SELECTED_BAND\";\nexport const setSelectedBand = selectedBand => {\n  return {\n    type: SET_SELECTED_BAND,\n    value: selectedBand\n  };\n};\nexport const SET_SELECTED_BAND_ID = \"SET_SELECTED_BAND_ID\";\nexport const setSelectedBandID = id => {\n  return {\n    type: SET_SELECTED_BAND_ID,\n    value: id\n  };\n};\nexport const SET_LOADING_SELECTED_BAND = \"SET_LOADING_SELECTED_BAND\";\nexport const setLoadingSelectedBand = isLoading => {\n  return {\n    type: SET_LOADING_SELECTED_BAND,\n    value: isLoading\n  };\n};\nexport const SET_SELECTED_BAND_ERROR = \"SET_SELECTED_BAND_ERROR\";\nexport const setSelectedBandError = error => {\n  return {\n    type: SET_SELECTED_BAND_ERROR,\n    error\n  };\n};","map":{"version":3,"sources":["/Users/i848465/personal/isobarfm/src/actions/selectedBand.js"],"names":["bandsAPI","albumActions","fetchBandByID","dispatch","getState","setLoadingSelectedBand","state","id","window","location","pathname","split","bands","list","band","find","setSelectedBand","bandByID","then","response","data","console","log","fetchAlbumsForBand","catch","err","setSelectedBandError","SET_SELECTED_BAND","selectedBand","type","value","SET_SELECTED_BAND_ID","setSelectedBandID","SET_LOADING_SELECTED_BAND","isLoading","SET_SELECTED_BAND_ERROR","error"],"mappings":"AAAA,OAAO,KAAKA,QAAZ,MAA0B,mBAA1B;AAEA,OAAO,KAAKC,YAAZ,MAA8B,UAA9B;AAEA,OAAO,MAAMC,aAAa,GAAG,MAAM;AACjC,SAAO,CAACC,QAAD,EAAWC,QAAX,KAAwB;AAC7BD,IAAAA,QAAQ,CAACE,sBAAsB,CAAC,IAAD,CAAvB,CAAR;AAEA,UAAMC,KAAK,GAAGF,QAAQ,EAAtB,CAH6B,CAK7B;;AACA,UAAMG,EAAE,GAAGC,MAAM,CAACC,QAAP,CAAgBC,QAAhB,CAAyBC,KAAzB,CAA+B,GAA/B,EAAoC,CAApC,CAAX,CAN6B,CAMsB;;AAEnD,QAAIL,KAAK,CAACM,KAAN,CAAYC,IAAhB,EAAsB;AACpB,YAAMC,IAAI,GAAGR,KAAK,CAACM,KAAN,CAAYC,IAAZ,CAAiBE,IAAjB,CAAsBD,IAAI,IAAIA,IAAI,CAACP,EAAL,KAAYA,EAA1C,CAAb;;AACA,UAAIO,IAAJ,EAAU;AACRX,QAAAA,QAAQ,CAACa,eAAe,CAACF,IAAD,CAAhB,CAAR;AAEAX,QAAAA,QAAQ,CAACE,sBAAsB,CAAC,KAAD,CAAvB,CAAR;AACD;AACF;;AAEDL,IAAAA,QAAQ,CACLiB,QADH,CACYV,EADZ,EAEGW,IAFH,CAEQC,QAAQ,IAAI;AAChB,YAAML,IAAI,GAAGK,QAAQ,CAACC,IAAtB;AACAjB,MAAAA,QAAQ,CAACa,eAAe,CAACF,IAAD,CAAhB,CAAR;AAEAO,MAAAA,OAAO,CAACC,GAAR,CAAY,uBAAZ,EAAqCR,IAArC;AACA,YAAMR,KAAK,GAAGF,QAAQ,EAAtB;AACAiB,MAAAA,OAAO,CAACC,GAAR,CAAYhB,KAAZ,EANgB,CAOhB;;AACAH,MAAAA,QAAQ,CAACF,YAAY,CAACsB,kBAAd,CAAR;AAEApB,MAAAA,QAAQ,CAACE,sBAAsB,CAAC,KAAD,CAAvB,CAAR;AACD,KAbH,EAcGmB,KAdH,CAcSC,GAAG,IAAI;AACZtB,MAAAA,QAAQ,CAACuB,oBAAoB,CAACD,GAAD,CAArB,CAAR;AACD,KAhBH;AAiBD,GAlCD;AAmCD,CApCM;AAsCP,OAAO,MAAME,iBAAiB,GAAG,mBAA1B;AACP,OAAO,MAAMX,eAAe,GAAGY,YAAY,IAAI;AAC7C,SAAO;AAAEC,IAAAA,IAAI,EAAEF,iBAAR;AAA2BG,IAAAA,KAAK,EAAEF;AAAlC,GAAP;AACD,CAFM;AAIP,OAAO,MAAMG,oBAAoB,GAAG,sBAA7B;AACP,OAAO,MAAMC,iBAAiB,GAAGzB,EAAE,IAAI;AACrC,SAAO;AAAEsB,IAAAA,IAAI,EAAEE,oBAAR;AAA8BD,IAAAA,KAAK,EAAEvB;AAArC,GAAP;AACD,CAFM;AAIP,OAAO,MAAM0B,yBAAyB,GAAG,2BAAlC;AACP,OAAO,MAAM5B,sBAAsB,GAAG6B,SAAS,IAAI;AACjD,SAAO;AAAEL,IAAAA,IAAI,EAAEI,yBAAR;AAAmCH,IAAAA,KAAK,EAAEI;AAA1C,GAAP;AACD,CAFM;AAIP,OAAO,MAAMC,uBAAuB,GAAG,yBAAhC;AACP,OAAO,MAAMT,oBAAoB,GAAGU,KAAK,IAAI;AAC3C,SAAO;AAAEP,IAAAA,IAAI,EAAEM,uBAAR;AAAiCC,IAAAA;AAAjC,GAAP;AACD,CAFM","sourcesContent":["import * as bandsAPI from \"../services/bands\";\n\nimport * as albumActions from \"./albums\";\n\nexport const fetchBandByID = () => {\n  return (dispatch, getState) => {\n    dispatch(setLoadingSelectedBand(true));\n\n    const state = getState();\n\n    // this is horrible please try to fix it later\n    const id = window.location.pathname.split(\"/\")[2]; // ugh\n\n    if (state.bands.list) {\n      const band = state.bands.list.find(band => band.id === id);\n      if (band) {\n        dispatch(setSelectedBand(band));\n\n        dispatch(setLoadingSelectedBand(false));\n      }\n    }\n\n    bandsAPI\n      .bandByID(id)\n      .then(response => {\n        const band = response.data;\n        dispatch(setSelectedBand(band));\n\n        console.log(\"setting selected band\", band);\n        const state = getState();\n        console.log(state);\n        // ughhhh\n        dispatch(albumActions.fetchAlbumsForBand);\n\n        dispatch(setLoadingSelectedBand(false));\n      })\n      .catch(err => {\n        dispatch(setSelectedBandError(err));\n      });\n  };\n};\n\nexport const SET_SELECTED_BAND = \"SET_SELECTED_BAND\";\nexport const setSelectedBand = selectedBand => {\n  return { type: SET_SELECTED_BAND, value: selectedBand };\n};\n\nexport const SET_SELECTED_BAND_ID = \"SET_SELECTED_BAND_ID\";\nexport const setSelectedBandID = id => {\n  return { type: SET_SELECTED_BAND_ID, value: id };\n};\n\nexport const SET_LOADING_SELECTED_BAND = \"SET_LOADING_SELECTED_BAND\";\nexport const setLoadingSelectedBand = isLoading => {\n  return { type: SET_LOADING_SELECTED_BAND, value: isLoading };\n};\n\nexport const SET_SELECTED_BAND_ERROR = \"SET_SELECTED_BAND_ERROR\";\nexport const setSelectedBandError = error => {\n  return { type: SET_SELECTED_BAND_ERROR, error };\n};\n"]},"metadata":{},"sourceType":"module"}