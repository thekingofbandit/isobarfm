{"ast":null,"code":"import _slicedToArray from \"/Users/i848465/personal/heroes/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/i848465/personal/heroes/src/components/HeroList/index.js\";\nimport React, { Fragment, useState, useEffect } from 'react';\nimport * as charactersAPI from '../../services/characters';\nimport Hero from '../Hero';\nimport { setHeroListLoading } from '../../actions/loader';\nimport { connect } from 'react-redux';\n\nconst HeroList = (showLoader, hideLoader) => {\n  const _useState = useState([]),\n        _useState2 = _slicedToArray(_useState, 2),\n        characters = _useState2[0],\n        setCharacters = _useState2[1];\n\n  useEffect(() => {\n    showLoader();\n    let chars = charactersAPI.list().then(res => {\n      return res.data.data.results;\n    });\n    setCharacters(chars);\n    hideLoader();\n  }, []);\n\n  const listCharacters = () => characters.map(value => React.createElement(Hero, Object.assign({\n    key: value.id\n  }, value, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  })));\n\n  return React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, \"Heroes\"), \" \", listCharacters());\n}; // class HeroList extends React.Component {\n//   state = { characters: [] };\n//   componentDidMount = async () => {\n//     this.props.showLoader();\n//     let characters = (await charactersAPI.list()).data.data.results;\n//     this.setState({ characters }, () => {\n//       this.props.hideLoader();\n//     });\n//   };\n//   listCharacters = () =>\n//     this.state.characters.map(value => <Hero key={value.id} {...value} />);\n//   render() {\n//     return (\n//       <Fragment>\n//         <h1>Heroes</h1> {this.listCharacters()}\n//       </Fragment>\n//     );\n//   }\n// }\n\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    showLoader: () => dispatch(setHeroListLoading(true)),\n    hideLoader: () => dispatch(setHeroListLoading(false))\n  };\n};\n\nexport default connect(null, mapDispatchToProps)(HeroList);","map":{"version":3,"sources":["/Users/i848465/personal/heroes/src/components/HeroList/index.js"],"names":["React","Fragment","useState","useEffect","charactersAPI","Hero","setHeroListLoading","connect","HeroList","showLoader","hideLoader","characters","setCharacters","chars","list","then","res","data","results","listCharacters","map","value","id","mapDispatchToProps","dispatch"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,QAA1B,EAAoCC,SAApC,QAAqD,OAArD;AAEA,OAAO,KAAKC,aAAZ,MAA+B,2BAA/B;AACA,OAAOC,IAAP,MAAiB,SAAjB;AACA,SAASC,kBAAT,QAAmC,sBAAnC;AACA,SAASC,OAAT,QAAwB,aAAxB;;AAEA,MAAMC,QAAQ,GAAG,CAACC,UAAD,EAAaC,UAAb,KAA4B;AAAA,oBACPR,QAAQ,CAAC,EAAD,CADD;AAAA;AAAA,QACpCS,UADoC;AAAA,QACxBC,aADwB;;AAG3CT,EAAAA,SAAS,CAAC,MAAM;AACdM,IAAAA,UAAU;AACV,QAAII,KAAK,GAAGT,aAAa,CAACU,IAAd,GAAqBC,IAArB,CAA0BC,GAAG,IAAI;AAC3C,aAAOA,GAAG,CAACC,IAAJ,CAASA,IAAT,CAAcC,OAArB;AACD,KAFW,CAAZ;AAIAN,IAAAA,aAAa,CAACC,KAAD,CAAb;AAEAH,IAAAA,UAAU;AACX,GATQ,EASN,EATM,CAAT;;AAWA,QAAMS,cAAc,GAAG,MACrBR,UAAU,CAACS,GAAX,CAAeC,KAAK,IAAI,oBAAC,IAAD;AAAM,IAAA,GAAG,EAAEA,KAAK,CAACC;AAAjB,KAAyBD,KAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAxB,CADF;;AAGA,SACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,OACmBF,cAAc,EADjC,CADF;AAKD,CAtBD,C,CAwBA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,MAAMI,kBAAkB,GAAGC,QAAQ,IAAI;AACrC,SAAO;AACLf,IAAAA,UAAU,EAAE,MAAMe,QAAQ,CAAClB,kBAAkB,CAAC,IAAD,CAAnB,CADrB;AAELI,IAAAA,UAAU,EAAE,MAAMc,QAAQ,CAAClB,kBAAkB,CAAC,KAAD,CAAnB;AAFrB,GAAP;AAID,CALD;;AAOA,eAAeC,OAAO,CACpB,IADoB,EAEpBgB,kBAFoB,CAAP,CAGbf,QAHa,CAAf","sourcesContent":["import React, { Fragment, useState, useEffect } from 'react';\n\nimport * as charactersAPI from '../../services/characters';\nimport Hero from '../Hero';\nimport { setHeroListLoading } from '../../actions/loader';\nimport { connect } from 'react-redux';\n\nconst HeroList = (showLoader, hideLoader) => {\n  const [characters, setCharacters] = useState([]);\n\n  useEffect(() => {\n    showLoader();\n    let chars = charactersAPI.list().then(res => {\n      return res.data.data.results;\n    });\n\n    setCharacters(chars);\n\n    hideLoader();\n  }, []);\n\n  const listCharacters = () =>\n    characters.map(value => <Hero key={value.id} {...value} />);\n\n  return (\n    <Fragment>\n      <h1>Heroes</h1> {listCharacters()}\n    </Fragment>\n  );\n};\n\n// class HeroList extends React.Component {\n//   state = { characters: [] };\n\n//   componentDidMount = async () => {\n//     this.props.showLoader();\n//     let characters = (await charactersAPI.list()).data.data.results;\n\n//     this.setState({ characters }, () => {\n//       this.props.hideLoader();\n//     });\n//   };\n\n//   listCharacters = () =>\n//     this.state.characters.map(value => <Hero key={value.id} {...value} />);\n\n//   render() {\n//     return (\n//       <Fragment>\n//         <h1>Heroes</h1> {this.listCharacters()}\n//       </Fragment>\n//     );\n//   }\n// }\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    showLoader: () => dispatch(setHeroListLoading(true)),\n    hideLoader: () => dispatch(setHeroListLoading(false)),\n  };\n};\n\nexport default connect(\n  null,\n  mapDispatchToProps\n)(HeroList);\n"]},"metadata":{},"sourceType":"module"}