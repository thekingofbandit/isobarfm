{"ast":null,"code":"import * as charactersAPI from '../services/characters';\nimport { setLoader } from './loader';\nexport const getHeroes = () => {\n  return (dispatch, getState) => {\n    const state = getState();\n    dispatch(setHeroListLoading(true));\n    dispatch(setLoader(true));\n    charactersAPI.list().then(data => {\n      // eslint-disable-next-line no-throw-literal\n      throw {\n        code: 1,\n        message: 'a '\n      };\n      const heroes = data.data.data.results;\n      dispatch(setHeroes(heroes));\n      dispatch(setHeroListLoading(false));\n\n      if (!state.comics.isLoading) {\n        dispatch(setLoader(false));\n      }\n    }).catch(err => {\n      dispatch(setHeroesError(err));\n    });\n  };\n};\nexport const SET_HEROES = 'SET_HEROES';\nexport const setHeroes = heroes => {\n  return {\n    type: SET_HEROES,\n    value: heroes\n  };\n};\nexport const SET_HERO_LIST_LOADING = 'SET_HERO_LIST_LOADING';\nexport const setHeroListLoading = isLoading => {\n  return {\n    type: SET_HERO_LIST_LOADING,\n    value: isLoading\n  };\n};\nexport const SET_HEROES_ERROR = 'SET_HEROES_ERROR';\nexport const setHeroesError = error => {\n  return {\n    type: SET_HEROES_ERROR,\n    error\n  };\n};","map":{"version":3,"sources":["/Users/i848465/personal/heroes/src/actions/heroes.js"],"names":["charactersAPI","setLoader","getHeroes","dispatch","getState","state","setHeroListLoading","list","then","data","code","message","heroes","results","setHeroes","comics","isLoading","catch","err","setHeroesError","SET_HEROES","type","value","SET_HERO_LIST_LOADING","SET_HEROES_ERROR","error"],"mappings":"AAAA,OAAO,KAAKA,aAAZ,MAA+B,wBAA/B;AACA,SAASC,SAAT,QAA0B,UAA1B;AAEA,OAAO,MAAMC,SAAS,GAAG,MAAM;AAC7B,SAAO,CAACC,QAAD,EAAWC,QAAX,KAAwB;AAC7B,UAAMC,KAAK,GAAGD,QAAQ,EAAtB;AACAD,IAAAA,QAAQ,CAACG,kBAAkB,CAAC,IAAD,CAAnB,CAAR;AACAH,IAAAA,QAAQ,CAACF,SAAS,CAAC,IAAD,CAAV,CAAR;AAEAD,IAAAA,aAAa,CACVO,IADH,GAEGC,IAFH,CAEQC,IAAI,IAAI;AACZ;AACA,YAAM;AAAEC,QAAAA,IAAI,EAAE,CAAR;AAAWC,QAAAA,OAAO,EAAE;AAApB,OAAN;AAEA,YAAMC,MAAM,GAAGH,IAAI,CAACA,IAAL,CAAUA,IAAV,CAAeI,OAA9B;AACAV,MAAAA,QAAQ,CAACW,SAAS,CAACF,MAAD,CAAV,CAAR;AAEAT,MAAAA,QAAQ,CAACG,kBAAkB,CAAC,KAAD,CAAnB,CAAR;;AACA,UAAI,CAACD,KAAK,CAACU,MAAN,CAAaC,SAAlB,EAA6B;AAC3Bb,QAAAA,QAAQ,CAACF,SAAS,CAAC,KAAD,CAAV,CAAR;AACD;AACF,KAbH,EAcGgB,KAdH,CAcSC,GAAG,IAAI;AACZf,MAAAA,QAAQ,CAACgB,cAAc,CAACD,GAAD,CAAf,CAAR;AACD,KAhBH;AAiBD,GAtBD;AAuBD,CAxBM;AA0BP,OAAO,MAAME,UAAU,GAAG,YAAnB;AACP,OAAO,MAAMN,SAAS,GAAGF,MAAM,IAAI;AACjC,SAAO;AAAES,IAAAA,IAAI,EAAED,UAAR;AAAoBE,IAAAA,KAAK,EAAEV;AAA3B,GAAP;AACD,CAFM;AAIP,OAAO,MAAMW,qBAAqB,GAAG,uBAA9B;AACP,OAAO,MAAMjB,kBAAkB,GAAGU,SAAS,IAAI;AAC7C,SAAO;AAAEK,IAAAA,IAAI,EAAEE,qBAAR;AAA+BD,IAAAA,KAAK,EAAEN;AAAtC,GAAP;AACD,CAFM;AAIP,OAAO,MAAMQ,gBAAgB,GAAG,kBAAzB;AACP,OAAO,MAAML,cAAc,GAAGM,KAAK,IAAI;AACrC,SAAO;AAAEJ,IAAAA,IAAI,EAAEG,gBAAR;AAA0BC,IAAAA;AAA1B,GAAP;AACD,CAFM","sourcesContent":["import * as charactersAPI from '../services/characters';\nimport { setLoader } from './loader';\n\nexport const getHeroes = () => {\n  return (dispatch, getState) => {\n    const state = getState();\n    dispatch(setHeroListLoading(true));\n    dispatch(setLoader(true));\n\n    charactersAPI\n      .list()\n      .then(data => {\n        // eslint-disable-next-line no-throw-literal\n        throw { code: 1, message: 'a ' };\n\n        const heroes = data.data.data.results;\n        dispatch(setHeroes(heroes));\n\n        dispatch(setHeroListLoading(false));\n        if (!state.comics.isLoading) {\n          dispatch(setLoader(false));\n        }\n      })\n      .catch(err => {\n        dispatch(setHeroesError(err));\n      });\n  };\n};\n\nexport const SET_HEROES = 'SET_HEROES';\nexport const setHeroes = heroes => {\n  return { type: SET_HEROES, value: heroes };\n};\n\nexport const SET_HERO_LIST_LOADING = 'SET_HERO_LIST_LOADING';\nexport const setHeroListLoading = isLoading => {\n  return { type: SET_HERO_LIST_LOADING, value: isLoading };\n};\n\nexport const SET_HEROES_ERROR = 'SET_HEROES_ERROR';\nexport const setHeroesError = error => {\n  return { type: SET_HEROES_ERROR, error };\n};\n"]},"metadata":{},"sourceType":"module"}