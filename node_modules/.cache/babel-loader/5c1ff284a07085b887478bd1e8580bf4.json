{"ast":null,"code":"import * as bandsAPI from \"../services/bands\";\nexport const fetchBands = () => {\n  return dispatch => {\n    dispatch(setBandListLoading(true));\n    bandsAPI.list().then(response => {\n      const bands = response.data;\n      dispatch(setBands(bands));\n      dispatch(setBandListLoading(false));\n    }).catch(err => {\n      dispatch(setBandsError(err));\n    });\n  };\n};\nexport const fetchBandByID = id => {\n  return dispatch => {\n    dispatch(setSelectedBandLoading(true));\n    bandsAPI.bandByID(id).then(response => {\n      const bands = response.data;\n      dispatch(setSelectedBand(bands));\n      dispatch(setSelectedBandLoading(false));\n    }).catch(err => {\n      dispatch(setSelectedBandError(err));\n    });\n  };\n};\nexport const SET_BANDS = \"SET_BANDS\";\nexport const setBands = heroes => {\n  return {\n    type: SET_BANDS,\n    value: heroes\n  };\n};\nexport const SET_BAND_LIST_LOADING = \"SET_BAND_LIST_LOADING\";\nexport const setBandListLoading = isLoading => {\n  return {\n    type: SET_BAND_LIST_LOADING,\n    value: isLoading\n  };\n};\nexport const SET_BANDS_ERROR = \"SET_BANDS_ERROR\";\nexport const setBandsError = error => {\n  return {\n    type: SET_BANDS_ERROR,\n    error\n  };\n};\nexport const SET_SELECTED_BAND = \"SET_SELECTED_BAND\";\nexport const setSelectedBand = error => {\n  return {\n    type: SET_SELECTED_BAND,\n    error\n  };\n};","map":{"version":3,"sources":["/Users/i848465/personal/isobarfm/src/actions/bands.js"],"names":["bandsAPI","fetchBands","dispatch","setBandListLoading","list","then","response","bands","data","setBands","catch","err","setBandsError","fetchBandByID","id","setSelectedBandLoading","bandByID","setSelectedBand","setSelectedBandError","SET_BANDS","heroes","type","value","SET_BAND_LIST_LOADING","isLoading","SET_BANDS_ERROR","error","SET_SELECTED_BAND"],"mappings":"AAAA,OAAO,KAAKA,QAAZ,MAA0B,mBAA1B;AAEA,OAAO,MAAMC,UAAU,GAAG,MAAM;AAC9B,SAAOC,QAAQ,IAAI;AACjBA,IAAAA,QAAQ,CAACC,kBAAkB,CAAC,IAAD,CAAnB,CAAR;AAEAH,IAAAA,QAAQ,CACLI,IADH,GAEGC,IAFH,CAEQC,QAAQ,IAAI;AAChB,YAAMC,KAAK,GAAGD,QAAQ,CAACE,IAAvB;AACAN,MAAAA,QAAQ,CAACO,QAAQ,CAACF,KAAD,CAAT,CAAR;AAEAL,MAAAA,QAAQ,CAACC,kBAAkB,CAAC,KAAD,CAAnB,CAAR;AACD,KAPH,EAQGO,KARH,CAQSC,GAAG,IAAI;AACZT,MAAAA,QAAQ,CAACU,aAAa,CAACD,GAAD,CAAd,CAAR;AACD,KAVH;AAWD,GAdD;AAeD,CAhBM;AAkBP,OAAO,MAAME,aAAa,GAAGC,EAAE,IAAI;AACjC,SAAOZ,QAAQ,IAAI;AACjBA,IAAAA,QAAQ,CAACa,sBAAsB,CAAC,IAAD,CAAvB,CAAR;AAEAf,IAAAA,QAAQ,CACLgB,QADH,CACYF,EADZ,EAEGT,IAFH,CAEQC,QAAQ,IAAI;AAChB,YAAMC,KAAK,GAAGD,QAAQ,CAACE,IAAvB;AACAN,MAAAA,QAAQ,CAACe,eAAe,CAACV,KAAD,CAAhB,CAAR;AAEAL,MAAAA,QAAQ,CAACa,sBAAsB,CAAC,KAAD,CAAvB,CAAR;AACD,KAPH,EAQGL,KARH,CAQSC,GAAG,IAAI;AACZT,MAAAA,QAAQ,CAACgB,oBAAoB,CAACP,GAAD,CAArB,CAAR;AACD,KAVH;AAWD,GAdD;AAeD,CAhBM;AAkBP,OAAO,MAAMQ,SAAS,GAAG,WAAlB;AACP,OAAO,MAAMV,QAAQ,GAAGW,MAAM,IAAI;AAChC,SAAO;AAAEC,IAAAA,IAAI,EAAEF,SAAR;AAAmBG,IAAAA,KAAK,EAAEF;AAA1B,GAAP;AACD,CAFM;AAIP,OAAO,MAAMG,qBAAqB,GAAG,uBAA9B;AACP,OAAO,MAAMpB,kBAAkB,GAAGqB,SAAS,IAAI;AAC7C,SAAO;AAAEH,IAAAA,IAAI,EAAEE,qBAAR;AAA+BD,IAAAA,KAAK,EAAEE;AAAtC,GAAP;AACD,CAFM;AAIP,OAAO,MAAMC,eAAe,GAAG,iBAAxB;AACP,OAAO,MAAMb,aAAa,GAAGc,KAAK,IAAI;AACpC,SAAO;AAAEL,IAAAA,IAAI,EAAEI,eAAR;AAAyBC,IAAAA;AAAzB,GAAP;AACD,CAFM;AAIP,OAAO,MAAMC,iBAAiB,GAAG,mBAA1B;AACP,OAAO,MAAMV,eAAe,GAAGS,KAAK,IAAI;AACtC,SAAO;AAAEL,IAAAA,IAAI,EAAEM,iBAAR;AAA2BD,IAAAA;AAA3B,GAAP;AACD,CAFM","sourcesContent":["import * as bandsAPI from \"../services/bands\";\n\nexport const fetchBands = () => {\n  return dispatch => {\n    dispatch(setBandListLoading(true));\n\n    bandsAPI\n      .list()\n      .then(response => {\n        const bands = response.data;\n        dispatch(setBands(bands));\n\n        dispatch(setBandListLoading(false));\n      })\n      .catch(err => {\n        dispatch(setBandsError(err));\n      });\n  };\n};\n\nexport const fetchBandByID = id => {\n  return dispatch => {\n    dispatch(setSelectedBandLoading(true));\n\n    bandsAPI\n      .bandByID(id)\n      .then(response => {\n        const bands = response.data;\n        dispatch(setSelectedBand(bands));\n\n        dispatch(setSelectedBandLoading(false));\n      })\n      .catch(err => {\n        dispatch(setSelectedBandError(err));\n      });\n  };\n};\n\nexport const SET_BANDS = \"SET_BANDS\";\nexport const setBands = heroes => {\n  return { type: SET_BANDS, value: heroes };\n};\n\nexport const SET_BAND_LIST_LOADING = \"SET_BAND_LIST_LOADING\";\nexport const setBandListLoading = isLoading => {\n  return { type: SET_BAND_LIST_LOADING, value: isLoading };\n};\n\nexport const SET_BANDS_ERROR = \"SET_BANDS_ERROR\";\nexport const setBandsError = error => {\n  return { type: SET_BANDS_ERROR, error };\n};\n\nexport const SET_SELECTED_BAND = \"SET_SELECTED_BAND\";\nexport const setSelectedBand = error => {\n  return { type: SET_SELECTED_BAND, error };\n};\n"]},"metadata":{},"sourceType":"module"}